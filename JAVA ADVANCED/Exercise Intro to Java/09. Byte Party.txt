import java.util.Scanner;


public class exam {
    public static void main(String[] args){

        Scanner scanner = new Scanner(System.in);

        int numberCount = Integer.parseInt(scanner.nextLine());

        int[] numbers = new int[numberCount];

        for (int a = 0; a < numberCount; a++) {
            int currentNumber = Integer.parseInt(scanner.nextLine());
            numbers[a] = currentNumber;
        }

        String input = scanner.nextLine();

        while (!input.equals("party over")){

            String[] tokens = input.split("\\s+");
            int pattern = Integer.parseInt(tokens[0]);
            int position = Integer.parseInt(tokens[1]);

            for (int i = 0; i < numbers.length; i++) {
                switch (pattern){
                    case 1:
                        changeValueToOne(numbers, position);
                        break;
                    case 0:
                        changeNumberToZero(numbers, position);
                        break;
                    case -1:
                        changeValueByPosition(numbers, position, i);
                        break;
                }
            }

            input = scanner.nextLine();
        }
        for (int a = 0; a < numbers.length; a++) {
            System.out.println(numbers[a]);

        }
    }

    private static void changeNumberToZero(int[] numbers, int position) {
        for (int i = 0; i < numbers.length; i++) {
        int a = numbers[i];
        int b = a >> position;
        int c = b & 1;
        int d = ~(1 << position);
        int result = a & d;
        numbers[i] = result;
        }
    }

    private static void changeValueToOne(int[] numbers, int position) {
        for (int i = 0; i < numbers.length; i++) {
            int a = numbers[i];
            int b = a >> position;
            int c = b & 1;
            int d = 1 << position;
            int result = a | d;
            numbers[i] = result;

        }
    }

    private static void changeValueByPosition(int[] numbers, int position, int i) {
        int a = numbers[i];
        int b = a >> position;
        int c = b & 1;
        if (c==0) {
            int d = 1 << position;
            int result = a | d;
            numbers[i] = result;
        } else {
            int d = ~(1 << position);
            int result = a & d;
            numbers[i] = result;
        }
    }
}
